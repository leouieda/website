- title: "Fatiando a Terra: Open-source tools for geophysics"
  authors: [Me, Santiago, Agustina]
  year: 2021
  conference: Geophysical Society of Houston
  github: fatiando/2021-gsh
  slides: https://www.fatiando.org/2021-gsh/
  about: |
    This was an invited talk to the Potential Fields group of the GSH. Thank
    you to <a href="https://www.andreabalza.com/">Andrea Balza Morales</a>
    for the invitation and for organizing the seminar series.
    The slides were made with <a href="https://revealjs.com/">reveal.js</a>
    using my <a href="https://github.com/leouieda/talk-template">open-source
    HTML talk template</a>.
  abstract: |
    The Fatiando a Terra project is a collection of open-source Python
    libraries for geophysics which cover a range of functionalities, from
    data download and processing to modeling and inversion. In this
    opportunity we will present the two libraries that are focused on
    potential fields: Harmonica and Boule. Boule implements reference
    ellipsoids (including oblate ellipsoids, spheres, and soon triaxial
    ellipsoids), conversions between ellipsoidal and geocentric spherical
    coordinates, and normal gravity calculations. The latter are performed
    using analytical expressions for gravity fields at any point outside of
    the ellipsoid. Harmonica provides tools for processing, forward
    modelling, and inversion of gravity and magnetic data. We will
    demonstrate its use to compute Bouguer gravity disturbances by forward
    modelling the topography with prisms, removing a 2nd order regional
    trend, and interpolating it onto a regular grid at a constant height
    using the equivalent layer technique. Both libraries are still evolving
    as we continue to refine their goals and scopes. We invite everyone to
    get involved in the development, whether it's through coding, writing
    documentation, or giving feedback.

- title: |
    Design useful tools that do one thing well and work together:
    rediscovering the UNIX philosophy while building the Fatiando a Terra
    project
  authors: [Me, LLi, Santiago, Agustina]
  year: 2021
  conference: AGU Fall Meeting
  github: fatiando/agu2021
  slides: https://www.fatiando.org/agu2021
  about: |
    This is an invited presentation about the past, current, and future of
    the Fatiando a Terra project. We will cover the current functionality,
    recent developments, and lessons learned along the way.
    The presentation is centered around a tutorial that walks you through the
    steps of transforming observed absolute gravity measurements into a grid
    of residual gravity disturbances at a constant height. The tutorial
    showcases some of the core utilities of all of our open-source libraries.
    The slides were made with <a href="https://revealjs.com/">reveal.js</a>
    using my <a href="https://github.com/leouieda/talk-template">open-source
    HTML talk template</a>.
  abstract: |
    The Fatiando a Terra project (https://www.fatiando.org) was started in
    2010 as a Python library for visualization, forward modelling, and
    inversion across different geophysical methods. Over the following 8
    years, the project attracted new contributors and grew to include
    cutting-edge methods, toy examples for teaching, and helper functions for
    visualization. Standards around testing, documentation, and code style
    evolved and new tools appeared around the ecosystem (such as SimPEG,
    PyVista, Devito, and pyGIMLi), making some of our functionality redundant
    and outdated. In an attempt to better interface with the emerging
    ecosystem, we started a major restructuring of the code base in 2018.
    This presentation will cover the current available functionality and some
    of the lessons learned from developing, growing, and maintaining the
    project, including current challenges and our future plans.

- title: |
    Python-based workflows for small-to-medium sized data: what works, what
    doesn't, and what can be improved
  authors: [Me, Santiago]
  year: 2021
  conference: AGU Fall Meeting
  github: compgeolab/agu2021
  slides: https://www.compgeolab.org/agu2021
  about: |
    This is an invited talk for the first part of an "Open Scince in Action"
    session, with 10 minute talks by panelists followed by a panel
    discussion.
    The slides were made with <a href="https://revealjs.com/">reveal.js</a>
    using my <a href="https://github.com/leouieda/talk-template">open-source
    HTML talk template</a>.
  abstract: |
    In this presentation, we will demonstrate the workflow that we have been
    establishing at the Computer-Oriented Geoscience Lab for building
    "repro-packs" for our papers and projects. We use a combination of
    virtual environments, data download and caching tools, notebooks,
    Makefiles, and data repositories to provide others with the means to
    reproduce and build upon our work. We will also share some of the
    unsolved challenges that we have encountered and our dreams for an ideal
    workflow.

- title: "Nurturing reliable and robust open-source scientific software"
  authors: [Me, Paul]
  year: 2017
  conference: AGU Fall Meeting
  invited: true
  github: leouieda/agu2017-oss
  recording: 0GO4ZZ5Ry6M
  about: |
    I was invited to this panel session on
    <a href="https://agu.confex.com/agu/fm17/meetingapp.cgi/Session/30500">Open-Source Software in the Geosciences</a>
    along with Kerry Key, Brian Savage, Gary D Egbert, Colin Andrew Zelt, and
    Lion Krischer. Many thanks to the chairs Lindsey Heagy, Anna Kelbert and
    Louise Pellerin for putting this together.
  abstract: |
    Scientific results are increasingly the product of software. The
    reproducibility and validity of published results cannot be ensured
    without access to the source code of the software used to produce them.
    Therefore, the code itself is a fundamental part of the methodology and
    must be published along with the results. With such a reliance on
    software, it is troubling that most scientists do not receive formal
    training in software development. Tools such as version control,
    continuous integration, and automated testing are routinely used in
    industry to ensure the correctness and robustness of software. However,
    many scientist do not even know of their existence (although efforts like
    Software Carpentry are having an impact on this issue). Publishing the
    source code is only the first step in creating an open-source project.
    For a project to grow it must provide documentation, participation
    guidelines, and a welcoming environment for new contributors. Expanding
    the project community is often more challenging than the technical
    aspects of software development. Maintainers must invest time to enforce
    the rules of the project and to onboard new members, which can be
    difficult to justify in the context of the “publish or perish” mentality.
    This problem will continue as long as software contributions are not
    recognized as valid scholarship by hiring and tenure committees.
    Furthermore, there are still unsolved problems in providing attribution
    for software contributions. Many journals and metrics of academic
    productivity do not recognize citations to sources other than traditional
    publications. Thus, some authors choose to publish an article about the
    software and use it as a citation marker. One issue with this approach is
    that updating the reference to include new contributors involves writing
    and publishing a new article. A better approach would be to cite a
    permanent archive of individual versions of the source code in services
    such as Zenodo. However, citations to these sources are not always
    recognized when computing citation metrics. In summary, the widespread
    development of reliable and robust open-source software relies on the
    creation of formal training programs in software development best
    practices and the recognition of software as a valid form of scholarship.
