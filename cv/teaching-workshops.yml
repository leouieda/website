- title: "Crafting beautiful maps with PyGMT"
  year: 2022
  authors: [WeiJi, Me, Max, ABelem]
  event: EGU General Assembly
  recording: list:PL3GHXjKa-p6VBA_MlUP7T_ByCFYQZ5uDG
  github: GenericMappingTools/egu22pygmt
  abstract: |
    In many scientific disciplines, accurate, intuitive, and aesthetically
    pleasing display of geospatial information is a critical tool. PyGMT
    (https://www.pygmt.org) - a Python interface to the Generic Mapping Tools
    (GMT) - is a mapping toolbox designed to produce publication-quality
    figures and maps for insertion into posters, reports, and manuscripts. This
    short course is geared towards geoscientists interested in creating
    beautiful maps using Python.

- title: "A geophysical tour of mid-ocean ridges"
  year: 2022
  authors: [Me]
  event: Transform
  recording: NzJmRlJCNbQ
  github: compgeolab/transform2022
  about: |
    This is a 2h online workshop delivered for the
    <a href="https://softwareunderground.org/">Software Underground</a>'s
    yearly festival of open geoscience:
    <a href="https://transform.softwareunderground.org/">Transform</a>.
    You can read the tutorial directly on this website at
    <a href="/blog/midocean-ridges.html">"A geophysical tour of mid-ocean ridges"</a>.
  abstract: |
    Mid-ocean ridges are the places where the oceanic crust and lithosphere
    are born. They are large mountain ranges in the deep ocean, stretching
    all around the globe and with heights rivalling that of the tallest
    mountains on land. Ridges are also a key part of plate tectonics, a major
    component of the biogeochemical cycle of the oceans, and the home of
    unique biological communities.
    In this tutorial, we'll study the mid-ocean ridges through the lens of
    geophysics. We'll use open geophysical data (gravity, bathymetry, lithospheric
    age) and open-source Python tools to try to answer questions like: How do
    ridges stay so tall? Are they in isostatic equilibrium? Why do ocean basins
    get deeper as they age? Along the way, we'll also learn how to translate into
    code the physical models of the cooling of the lithosphere so that we can
    compare their predictions with our data.

- title: "The Generic Mapping Tools (GMT) for Geodesy"
  authors: [Paul, Joaquim, Me, Dongdong, Eric, Max]
  year: 2019 - 2021
  event: UNAVCO Short Courses
  recording: list:PLzmugeDoplFPtWkrCqWWWZGZzPQr_k0Kx
  github: GenericMappingTools/2021-unavco-course
  about: |
    This is our 2-day course covering the use of Generic Mapping Tools (GMT)
    in geodesy using UNIX shell scripting.
    Lectures and exercises will be given to teach the basic conventions of
    using GMT, such as plotting grids, images, and vector data (points,
    lines, polygons). Labs will include both processing and mapping of
    various data sets relevant to geodesy.
    We've been teaching this workshop yearly since 2019 and have done both
    in person and online versions. Below you'll find links to material for
    individual iterations.

- title: "From scattered data to gridded products using Verde"
  year: 2020
  authors: [Me]
  event: Transform
  github: fatiando/transform2020
  recording: -xZdNdvzm3E
  about: |
    This tutorial was a part of the
    <a href="https://softwareunderground.org/">Software Underground</a>'s
    Transform event, an online series of open-access and open-source
    tutorials about coding and geoscience.
    The live video was streamed on YouTube and participants asked questions
    on the Slack workspace, where volunteers would help them along and
    pass on any feedback to me.
    The format worked quite well and the video because a useful reference for
    novices getting into Fatiando a Terra.
  abstract: |
    This tutorial will be a hands-on tour of
    <a href="https://www.fatiando.org/verde">Verde</a>, a Python package for
    processing and gridding geophysical/geospatial data with a twist of
    machine learning. We'll start with a real dataset and work our way
    towards producing one or more gridded products. The way there will take
    us through: loading some data, generating and handling coordinates and
    projections (using pyproj), splitting training and testing data for
    validation, data decimation with blocked means/medians to avoid aliasing,
    2D trend estimation, gridding with bi-harmonic splines, combining
    everything into a data processing pipeline, cross-validation of data
    distributed spatially on the Earth (including parallel execution with
    Dask).

- title: "Let's build a geophysical inversion with Python"
  year: 2020
  authors: [Me]
  github: compgeolab/2020-aachen-inverse-problems
  event: RWTH Aachen University graduate school IRTG-2379 Modern Inverse Problems
  about: |
    I taught this short online course (3 hours) for the Aachen graduate
    school on invitation by <a href="https://www.cgre.rwth-aachen.de/cms/CGRE/Das-Lehr-und-Forschungsgebiet/~dnyyj/Prof-Wellmann/">Prof. Florian Wellman</a>.
    I tried to give it a very hands-on spin where we attempted to code a
    non-linear gravity inversion live.
    It worked out much better than I expected!
  abstract: |
    Inverse problems abound in geophysics. It is the primary way in which we
    investigate the subsurface of the Earth, which is largely inaccessible to
    us beyond the first dozen or so kilometers. From measurements acquired on
    land, sea, air, and from space, geophysicists tease out the inner
    structure of the Earth - from a few meters to thousands of kilometers
    deep in the inner core. Observations of disturbances in the Earth's
    gravity field are one of the key elements used by geophysicists to
    investigate the crust-mantle interface, the large-scale structure of
    sedimentary basins (which are reservoirs for water and hydrocarbons), and
    even the mass balance of the world's ice sheets. However, the gravity
    inverse problem is particularly challenging due to the physics of
    potential fields. Unique solutions are difficult to come by and only
    exist under strict assumptions, which often don't hold for real world
    scenarios. For these problems, regularization plays a critical role and
    has been the focus of much research in the past 20 years.
    In this tutorial, we will work together to solve a 2D gravity inverse
    problem in Python. Our code will estimate the shape of a sedimentary
    basin from gravity observations. This non-linear inverse problem will
    allow us to visually explore the effects of different types of
    regularization from a geometric perspective (smoothness, equality
    constraints, and more). We will discuss the challenges involved in real
    world applications and the difficulties of quantifying the uncertainty in
    the solutions. The main goal of this tutorial is to impart theoretical
    and practical skills that can be easily transfered to other domains.

- title: "Best practices for developing and sustaining your open-source research software"
  year: 2019
  authors: [Rene, Lindsey, Lion, Me, Bane]
  github: agu-ossi/2019-agu-oss
  event: AGU Fall Meeting
  about: |
    This is the second edition of our open-source best practices workshop
    at AGU. Follwing the success of the 2018 workshop, we proposed it again
    with slight modifications. This year's workshop was organized by
    <a href="https://gassmoeller.github.io/">Rene Gassmoeller</a>,
    <a href="https://lindseyjh.ca/">Lindsey Heagy</a>,
    <a href="https://github.com/krischer">Lion Krischer</a>,
    myself, and
    <a href="https://banesullivan.com/">Bane Sullivan</a>.
  abstract: |
    Modern research software is the basis of scientific progress in
    geophysics by supporting data collection, data analysis, and numerical
    simulation. These codes span the range from small one-off scripts
    developed by individual researchers up to large packages with thousands
    of users. While there is increasing awareness about best programming
    practices, scientists are rarely prepared to scale their codes into team
    projects developed by larger communities. However, growing a sustainable
    software project and the community of practice that surrounds it is a
    prerequisite to make scientific software development more efficient and
    research more reproducible.
    The open-source community has established modern best-practices for
    developing reliable software, publishing that software, forming
    communities around the code, and finding sustainable ways to maintain
    them over time. This hands-on half-day workshop is aimed at scientists
    currently developing their own software of any size. The participants
    will apply a workflow for developing and managing open-source research
    codes following best-practices. We will discuss licensing and privacy
    considerations for open-source projects in a scientific context, briefly
    review version control with git and hosting projects online, and teach
    how to automatically test and efficiently document code. Furthermore, we
    will discuss how to grow projects and manage communities around it. The
    course material is independent of programming language or scientific
    discipline. By the end of this workshop participants will be able to
    apply the gained knowledge directly to their own projects and create more
    sustainable research software.

- title: "Introduction to Python for Earth Science"
  authors: [Me]
  year: 2019
  github: leouieda/2019-06-reu-python
  event: Earth Sciences REU program (University of Hawaiʻi at Mānoa)
  about: |
    This workshop provided a hands-on introduction to the Python programming
    language to the undergraduate REU students visiting the University of
    Hawaiʻi at Mānoa.

- title: "Best practices for modern open-source research codes"
  year: 2018
  authors: [Me, Lindsey, Lion, Florian]
  github: agu-ossi/2018-agu-oss
  event: AGU Fall Meeting
  about: |
    This half-day workshop was taught at the 2018 AGU Fall Meeting in
    Washington DC, USA. Our goal was to help people who are already programming
    and want to take the next step towards developing open-source software.
  abstract: |
    Modern science increasingly relies on code, ranging from small scripts to
    workflows with many interacting parts. Reproducibility and extension of
    studies employing these codes require that they are accessible. The
    open-source community has established modern best-practices for making
    software available, usable, and maintainable. In this workshop, we will
    demonstrate a workflow for publishing research code following these
    best-practices. We will cover open-source licenses, version control,
    automated testing, documentation, and continuous integration. The
    workshop will be hands-on: participants will work to set up a project
    using sample code provided by the instructors. By the end, participants
    will have the knowledge needed to continue learning independently and
    apply these practices to their own research code. These resources can be
    applied to any programming language or scientific discipline.

- title: "Git and GitHub: What are their uses? Are they worth the effort? Let’s find out!"
  year: 2018
  authors: [Me]
  event: ASPRS Student Chapter of the University of Hawai‘i at Mānoa
  about: |
    Short course on git and GitHub taught to geography students.

- title: "Introduction to Python"
  year: 2017
  authors: [Me]
  event: University of Hawai‘i at Mānoa
  github: leouieda/python-hawaii-2017
  about: |
    Three-day introduction to Python workshop at for Geology and Geophysics
    students.

- title: "Python para Geólogos"
  year: 2016
  authors: [Me]
  event: VII Semana Acadêmica de Geologia da UERJ (SAGEO)
  github: leouieda/python-geologia-2016
  about: |
    Two-day introduction to Python, taught in Portuguese.

- title: "Python como uma ferramenta numérica em ciências da Terra: uma nova abordagem de programação"
  year: 2016
  authors: [Bianchi, Sacek, Me]
  event: XVIII Escola de Verão de Geofísica do IAG - USP
  github: leouieda/verao2016
  about: |
    Four-day workshop introducing Python as tool for geophysical data analysis.
    Taught in Portuguese to undergraduate and graduate students.

- title: "Tópicos de inversão em geofísica"
  year: 2014
  authors: [Me]
  event: III Semana de Geofísica do IG - UnB
  github: pinga-lab/inversao-unb-2014
  about: |
    A shorter version of the 4-day course we gave last time, focusing less on
    the maths and more on core concepts of inversion.

- title: "Tópicos de inversão em geofísica"
  year: 2012
  authors: [Bi, Me]
  event: XIV Escola de Verão de Geofísica do IAG - USP
  github: pinga-lab/inversao-iag-2012
  about: |
    A 4-day course about inverse problems, both the mathematical formulation
    (taught by Vanderlei) and the practical implementation in Python (taught by
    me). This was the first course I ever taught and it confirmed to me that I
    have a passion for teaching.
